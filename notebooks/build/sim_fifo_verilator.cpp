#include "Vfifo.h"
#include "verilated.h"
#include <cassert>
#include <iostream>

void check(const char* port, int a, int b, int cycle) {
    if (!(a == b)) {
        std::cerr << "Got      : " << a << std::endl;
        std::cerr << "Expected : " << b << std::endl;
        std::cerr << "Cycle    : " << cycle << std::endl;
        std::cerr << "Port     : " << port << std::endl;
        exit(1);
    }
}

int main(int argc, char **argv, char **env) {
    Verilated::commandArgs(argc, argv);
    Vfifo* top = new Vfifo;
    top->wdata = 1;
    top->wen = 0;
    top->ren = 1;
    top->eval();
    check("full", top->full, 0, 0);
    top->eval();
    check("empty", top->empty, 1, 0);
    top->eval();
    check("rdata", top->rdata, 0b0000, 0);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 2;
    top->wen = 1;
    top->ren = 0;
    top->eval();
    check("full", top->full, 0, 1);
    top->eval();
    check("empty", top->empty, 1, 1);
    top->eval();
    check("rdata", top->rdata, 0b0000, 1);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 3;
    top->wen = 1;
    top->ren = 1;
    top->eval();
    check("full", top->full, 0b0, 2);
    top->eval();
    check("empty", top->empty, 0, 2);
    top->eval();
    check("rdata", top->rdata, 0b0010, 2);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 4;
    top->wen = 1;
    top->ren = 0;
    top->eval();
    check("full", top->full, 0, 3);
    top->eval();
    check("empty", top->empty, 0b0, 3);
    top->eval();
    check("rdata", top->rdata, 0b0011, 3);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 5;
    top->wen = 0;
    top->ren = 1;
    top->eval();
    check("full", top->full, 0b0, 4);
    top->eval();
    check("empty", top->empty, 0, 4);
    top->eval();
    check("rdata", top->rdata, 0b0011, 4);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 6;
    top->wen = 0;
    top->ren = 1;
    top->eval();
    check("full", top->full, 0, 5);
    top->eval();
    check("empty", top->empty, 0b0, 5);
    top->eval();
    check("rdata", top->rdata, 0b0100, 5);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 7;
    top->wen = 1;
    top->ren = 0;
    top->eval();
    check("full", top->full, 0, 6);
    top->eval();
    check("empty", top->empty, 0b1, 6);
    top->eval();
    check("rdata", top->rdata, 0b0000, 6);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 8;
    top->wen = 0;
    top->ren = 1;
    top->eval();
    check("full", top->full, 0b0, 7);
    top->eval();
    check("empty", top->empty, 0, 7);
    top->eval();
    check("rdata", top->rdata, 0b0111, 7);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 9;
    top->wen = 1;
    top->ren = 1;
    top->eval();
    check("full", top->full, 0, 8);
    top->eval();
    check("empty", top->empty, 0b1, 8);
    top->eval();
    check("rdata", top->rdata, 0b0010, 8);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 10;
    top->wen = 1;
    top->ren = 0;
    top->eval();
    check("full", top->full, 0b0, 9);
    top->eval();
    check("empty", top->empty, 0, 9);
    top->eval();
    check("rdata", top->rdata, 0b1001, 9);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 11;
    top->wen = 1;
    top->ren = 0;
    top->eval();
    check("full", top->full, 0b0, 10);
    top->eval();
    check("empty", top->empty, 0, 10);
    top->eval();
    check("rdata", top->rdata, 0b1001, 10);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 12;
    top->wen = 1;
    top->ren = 0;
    top->eval();
    check("full", top->full, 0b0, 11);
    top->eval();
    check("empty", top->empty, 0, 11);
    top->eval();
    check("rdata", top->rdata, 0b1001, 11);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 13;
    top->wen = 1;
    top->ren = 0;
    top->eval();
    check("full", top->full, 0b1, 12);
    top->eval();
    check("empty", top->empty, 0, 12);
    top->eval();
    check("rdata", top->rdata, 0b1001, 12);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 13;
    top->wen = 0;
    top->ren = 1;
    top->eval();
    check("full", top->full, 0b1, 13);
    top->eval();
    check("empty", top->empty, 0, 13);
    top->eval();
    check("rdata", top->rdata, 0b1001, 13);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
    top->wdata = 14;
    top->wen = 1;
    top->ren = 1;
    top->eval();
    check("full", top->full, 0, 14);
    top->eval();
    check("empty", top->empty, 0b0, 14);
    top->eval();
    check("rdata", top->rdata, 0b1010, 14);
    top->CLK = 0;
    top->eval();
    top->CLK = 1;
    top->eval();
}
